{"version":3,"sources":["pages/Confidentiality.js","pages/ContactTracing.js","pages/Demographics.js","pages/SignIn.js","Nav/index.js","App.js","reportWebVitals.js","index.js"],"names":["Confidentiality","CssBaseline","Typography","variant","align","Paper","elevation","Container","Grid","container","spacing","item","xs","FormControlLabel","control","Checkbox","color","name","value","label","alignItems","Button","useStyles","makeStyles","theme","checkboxFormat","marginTop","paddingLeft","inputPadding","paddingRight","descriptPadding","padding","formContainerPadding","ContactTracing","classes","Card","raised","maxWidth","className","sm","TextField","required","id","fullWidth","autoComplete","placeholder","FormControl","component","FormLabel","FormGroup","row","labelPlacement","sexRadioButtons","raceCheckBoxes","Demographics","React","useState","setValue","width","RadioGroup","aria-label","onChange","event","target","Radio","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","display","flexDirection","avatar","secondary","main","form","submit","SignInSide","username","password","formState","handleChange","handleFormSubmit","a","md","square","background","heroContent","gutterBottom","Avatar","noValidate","onSubmit","autoFocus","ul","listStyle","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","flexGrow","link","Pricing","currentPage","setCurrentPage","Fragment","AppBar","position","Toolbar","noWrap","Link","href","onClick","renderPage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42ee3be6.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\n\nexport default function Confidentiality() {\n\n  return (\n    <div>\n      <CssBaseline />\n        <Typography variant=\"h3\" align=\"center\">\n          Confidentiality and Protection of Health Information\n        </Typography>\n\n      <Paper elevation={3}><Container>\n        <br/>\n        <Grid container spacing={3}>\n          <Grid item >\n            <Typography variant=\"h5\" align=\"center\">\n              **NOTE: This webpage is NOT apart of ANY actual health care service. It is expressly use for educational purposes, and NO ACTUAL PERSONAL HEALTH INFORMATION SHOULD BE ENTERED ON THIS SITE!**\n            </Typography>\n            <br/>\n            <Typography>\n              Due to the large increase in the amount of cases that require contact tracing, your local health department has opted for individuals\n              to conduct their own Contact Tracing using this self reporting service.\n\n              <ol>\n                <li>\n                  This website's purpose is for collecting crucial information to help state and local health departments stop the spread of COVID-19. \n                </li>\n                <li>\n                  Any information you choose to share on this website will be completely confidential and used to keep your community safe. This website is also designed to help educate individuals about COVID-19,\n                  but please contact your local healthcare providers concerning medical advice.                   \n                </li>\n                <li>\n                  These questions should take 10-15 minutes to answer. Please answer all questions honestly and as accurately as possible.\n                </li>\n              </ol>\n\n              Your cooperation here is essential in Tennessee's fight against this disease. To continue, check the box below and click \"Move to Next Section\".\n\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <FormControlLabel\n              control={<Checkbox color=\"secondary\" name=\"hippaAgree\" value=\"yes\" />}\n              label=\"I agree to provide the necessary information and understand the confidentiality of doing so.\"\n            />\n          </Grid>\n          <Grid item xs={12} alignItems=\"center\">\n            <Button variant=\"contained\" color=\"primary\">\n              Save Response\n            </Button>\n          </Grid>\n        </Grid>\n      </Container></Paper>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { Checkbox } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\n\nconst useStyles = makeStyles((theme) => ({\n  checkboxFormat: {\n    marginTop: 10,\n    paddingLeft: 10\n  },\n  inputPadding: {\n    paddingRight: 10\n  },\n  descriptPadding: {\n    padding: theme.spacing(3, 2, 0)\n  },\n  formContainerPadding: {\n    padding: theme.spacing(1, 2, 3),\n  }\n}));\n\nexport default function ContactTracing() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Typography variant=\"h3\" align=\"center\">\n          Contact Tracing\n      </Typography>\n        \n      <Card raised=\"true\">\n          \n        <Container maxWidth=\"lg\" className={classes.descriptPadding}>\n          <Typography variant=\"h6\" align=\"Left\">\n            Please enter the following information about any individuals who you would consider a close contact. Keep in mind the following\n            factors when determining who is a close-contact:\n            <ol>\n              <li>\n                A close contact is someone who has been within 6 feet of someone with COVID-19, for longer than \n                15 minutes during the time they could have been contagious.                  \n              </li>\n              <li>\n                A person can be contagious up to two days before their symptoms start, or two days before their test \n                date if they did not have symptoms.                 \n              </li>\n              <li>\n                Enter the information of anyone who was within 6 feet of you for more than 15 minutes from the start\n                of your contagious period, to when you started your isolation.\n              </li>\n            </ol>\n          </Typography>\n        </Container>\n          \n        <Container maxWidth=\"lg\" className={classes.formContainerPadding}>\n          <Grid container xs={12} sm={10}>\n            <Grid item xs={12} sm={2}>\n              <TextField className={classes.inputPadding} required id=\"firstName1\" name=\"firstName1\" label=\"First Name\" fullWidth autoComplete=\"given-name\"/>\n            </Grid>\n            <Grid item xs={12} sm={2}>\n              <TextField className={classes.inputPadding} required id=\"lastName1\" name=\"lastName1\" label=\"Last Name\" fullWidth autoComplete=\"family-name\"/>\n            </Grid>\n            <Grid item xs={12} sm={2}>\n              <TextField className={classes.inputPadding} required id=\"primaryPhone1\" name=\"primaryPhone1\" label=\"Primary Phone\" placeholder=\"XXX-XXX-XXXX\" autoComplete=\"tel\"/>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n            <FormControl component=\"fieldset\" className={classes.checkboxFormat}>\n              <FormLabel component=\"legend\">Other Info</FormLabel>\n                <FormGroup row>\n                  <FormControlLabel labelPlacement=\"end\" control={<Checkbox name=\"householdContact\"/>} label=\"This individual lives with me.\"/> \n                  <FormControlLabel labelPlacement=\"end\" control={<Checkbox name=\"knownCase\"/>} label=\"Is a known positive case.\"/>                                             \n                </FormGroup>\n              </FormControl>\n            </Grid>\n          </Grid>\n\n          <Grid container xs={12} sm={10}>\n            <Grid item xs={12} sm={2}>\n              <TextField className={classes.inputPadding} required id=\"firstName2\" name=\"firstName2\" label=\"First Name\" fullWidth autoComplete=\"given-name\"/>\n            </Grid>\n            <Grid item xs={12} sm={2}>\n              <TextField className={classes.inputPadding} required id=\"lastName2\" name=\"lastName2\" label=\"Last Name\" fullWidth autoComplete=\"family-name\"/>\n            </Grid>\n            <Grid item xs={12} sm={2}>\n              <TextField className={classes.inputPadding} required id=\"primaryPhone2\" name=\"primaryPhone2\" label=\"Primary Phone\" placeholder=\"XXX-XXX-XXXX\" autoComplete=\"tel\"/>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n            <FormControl component=\"fieldset\" className={classes.checkboxFormat}>\n              <FormLabel component=\"legend\">Other Info</FormLabel>\n                <FormGroup row>\n                  <FormControlLabel labelPlacement=\"end\" control={<Checkbox name=\"householdContact\"/>} label=\"This individual lives with me.\"/> \n                  <FormControlLabel labelPlacement=\"end\" control={<Checkbox name=\"knownCase\"/>} label=\"Is a known positive case.\"/>                                             \n                </FormGroup>\n              </FormControl>\n            </Grid>\n          </Grid>\n\n          <Grid container xs={12} sm={10}>\n            <Grid item xs={12} sm={2}>\n              <TextField className={classes.inputPadding} required id=\"firstName3\" name=\"firstName3\" label=\"First Name\" fullWidth autoComplete=\"given-name\"/>\n            </Grid>\n            <Grid item xs={12} sm={2}>\n              <TextField className={classes.inputPadding} required id=\"lastName3\" name=\"lastName3\" label=\"Last Name\" fullWidth autoComplete=\"family-name\"/>\n            </Grid>\n            <Grid item xs={12} sm={2}>\n              <TextField className={classes.inputPadding} required id=\"primaryPhone3\" name=\"primaryPhone3\" label=\"Primary Phone\" placeholder=\"XXX-XXX-XXXX\" autoComplete=\"tel\"/>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n            <FormControl component=\"fieldset\" className={classes.checkboxFormat}>\n              <FormLabel component=\"legend\">Other Info</FormLabel>\n                <FormGroup row>\n                  <FormControlLabel labelPlacement=\"end\" control={<Checkbox name=\"householdContact\"/>} label=\"This individual lives with me.\"/> \n                  <FormControlLabel labelPlacement=\"end\" control={<Checkbox name=\"knownCase\"/>} label=\"Is a known positive case.\"/>                                             \n                </FormGroup>\n              </FormControl>\n            </Grid>\n          </Grid>                \n\n          <Grid item xs={12}>\n            <Button variant=\"contained\" color=\"primary\">\n              Save Responses\n            </Button>\n          </Grid>\n        </Container>\n      </Card>\n    </div>\n  );\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { Checkbox } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\n\nconst useStyles = makeStyles((theme) => ({\n  sexRadioButtons: {\n    marginTop: 10\n  },\n  raceCheckBoxes: {\n    marginTop: 5\n  },\n  descriptPadding: {\n    padding: theme.spacing(3, 2, 0)\n  },\n  formContainerPadding: {\n    padding: theme.spacing(2, 2, 5),\n  }\n}));\n\nexport default function Demographics() {\n  const classes = useStyles();\n\n  const [value, setValue] = React.useState('female');\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h3\" align=\"center\">\n          Demographics\n      </Typography>\n        \n        <Card raised=\"true\">\n          \n        <Typography variant=\"h5\" align=\"center\" className={classes.descriptPadding}>\n          Please enter the following demographic information to confirm that it is correct in our records.\n        </Typography>\n          \n        <Container width=\"auto\" maxWidth=\"md\" component=\"main\" className={classes.formContainerPadding}>\n          <Grid container xs={12} sm={8}>\n            <Grid item xs={12} sm={4}>\n              <TextField required id=\"firstName\" name=\"firstName\" label=\"First Name\" autoComplete=\"given-name\"/>\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <TextField required id=\"lastName\" name=\"lastName\" label=\"Last Name\" autoComplete=\"family-name\"/>\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <TextField required id=\"dateOfBirth\" name=\"dateOfBirth\" label=\"Date of Birth\" placeholder=\"MM/DD/YYYY\"/>\n            </Grid>\n          </Grid>\n\n          <Grid item xs={12} sm={8}>\n            <TextField required id=\"address1\" name=\"address1\" label=\"Street Address\" fullWidth autoComplete=\"address-line1\"/>\n          </Grid>\n          <Grid item xs={12} sm={8}>\n            <TextField id=\"address2\" name=\"address2\" label=\"Street Address 2\" fullWidth autoComplete=\"address-line2\"/>\n          </Grid>\n\n          <Grid container xs={12} sm={8}>\n            <Grid item xs={12} sm={3}>\n              <TextField required id=\"city\" name=\"city\" label=\"City\" autoComplete=\"address-level2\"/>\n            </Grid>\n            <Grid item xs={12} sm={3}>\n              <TextField required id=\"state\" name=\"state\" label=\"State\" autoComplete=\"state\"/>\n            </Grid>\n            <Grid item xs={12} sm={3}>\n              <TextField required id=\"county\" name=\"county\" label=\"County\" autoComplete=\"county\"/>\n            </Grid>          \n            <Grid item xs={12} sm={3}>\n              <TextField required id=\"zip\" name=\"zip\" label=\"Zip/Postal code\" autoComplete=\"postal-code\"/>\n            </Grid>\n          </Grid>\n\n          <Grid container xs={12} sm={8}>\n            <Grid item xs={12} sm={4}>\n              <TextField required id=\"primaryPhone\" name=\"primaryPhone\" label=\"Primary Phone\" placeholder=\"XXX-XXX-XXXX\" autoComplete=\"tel\"/>\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <TextField id=\"secondaryPhone\" name=\"secondaryPhone\" label=\"Secondary Phone\" placeholder=\"XXX-XXX-XXXX\" autoComplete=\"tel\"/>\n            </Grid>\n          </Grid>\n\n          <Grid item xs={12} sm={8}>\n            <FormControl component=\"fieldset\" className={classes.sexRadioButtons}>\n              <FormLabel component=\"legend\">What is your sex?</FormLabel>\n              <RadioGroup row aria-label=\"sex\" name=\"sex1\" value={value} onChange={handleChange}>\n                <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n                <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n                <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          <Grid item xs={12} sm={8}>\n            <FormControl component=\"fieldset\" className={classes.raceCheckBoxes}>\n            <FormLabel component=\"legend\">What is your race?</FormLabel>\n              <FormGroup row>\n                <FormControlLabel control={<Checkbox name=\"raceBlack\"/>} label=\"Black\"/>\n                <FormControlLabel control={<Checkbox name=\"raceWhite\"/>} label=\"White\"/>\n                <FormControlLabel control={<Checkbox name=\"raceHispanic\"/>} label=\"Hispanic\"/>                \n                <FormControlLabel control={<Checkbox name=\"raceAsian\"/>} label=\"Asian\"/>\n                <FormControlLabel control={<Checkbox name=\"raceNativeAmerican\"/>} label=\"Native American\"/>\n                <FormControlLabel control={<Checkbox name=\"racePacificIslander\"/>} label=\"Pacific Islander\"/>\n                <FormControlLabel control={<Checkbox name=\"raceOther\"/>} label=\"Other\"/>\n                <FormControlLabel control={<Checkbox name=\"raceUnknown\"/>} label=\"Unknown\"/>                                                   \n              </FormGroup>\n            </FormControl>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Button variant=\"contained\" color=\"primary\">\n              Save Responses\n            </Button>\n          </Grid>\n        </Container>\n      </Card>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n// import Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\n// import Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\nimport Container from '@material-ui/core/Container';\n\n// import { useMutation } from '@apollo/react-hooks';\n// import { LOGIN_USER } from '../../utils/mutations';\n// import Auth from '../../utils/auth';\n\n// function Copyright() {\n//   return (\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//       {'Copyright © '}\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//         javaDript\n//       </Link>{' '}\n//       {new Date().getFullYear()}\n//       {'.'}\n//     </Typography>\n//   );\n// }\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://indianapublicradio.org/wp-content/uploads/2020/07/contact_tracing-1560x900.jpg)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignInSide() {\n  const classes = useStyles();\n\n  const [formState, setFormState] = useState({ username: '', password: '' });\n  // const [login, { error }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    // const { name, value } = event.target;\n\n    // setFormState({\n    //   ...formState,\n    //   [name]: value,\n    // });\n  };\n\n  // submit form\n  const handleFormSubmit = async event => {\n    // event.preventDefault();\n    \n    // try {\n    //   const { data } = await login({\n    //     variables: { ...formState }\n    //   });\n\n    //   Auth.login(data.login.token);\n    // } catch (e) {\n    //   console.error(e)\n    // }\n\n    // // clear form values\n    // setFormState({\n    //   username: '',\n    //   password: '',\n    // });\n  };\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={false} md={6} className={classes.image} />\n      <Grid item xs={12} sm={12} md={6} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n\n          <Container maxWidth=\"lg\" component=\"main\" background=\"main\" className={classes.heroContent}>\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\" className=\"googleFont\" gutterBottom>\n              Contact Tracing Self Reporting Form\n            </Typography>\n            <Typography variant=\"h6\" align=\"center\" className=\"googleFont2\" component=\"p\">\n              Please make sure that you sign-in using your specific username and password given to you by your local health department.\n            </Typography>\n          </Container>\n          <br/>\n          <Avatar className={classes.avatar}>\n            <LocalHospitalIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n\n          <form className={classes.form} noValidate onSubmit={handleFormSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            value={formState.username}\n            onChange={handleChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={formState.password}\n            onChange={handleChange}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n        </form>\n        {/* {error && <div>Login failed</div>} */}\n\n            {/* <Box mt={5}>\n              <Copyright />\n            </Box> */}\n        </div>\n      </Grid>\n    </Grid>\n  );\n}","import React, { useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nimport Confidentiality from '../pages/Confidentiality';\nimport ContactTracing from '../pages/ContactTracing';\nimport Demographics from '../pages/Demographics';\n// import Exposure from '../pages/Exposure';\nimport SignIn from '../pages/SignIn';\n// import Symptoms from '../pages/Symptoms';\n// import Travel from '../pages/Travel';\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: 'none',\n    },\n  },\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: 'wrap',\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n  },\n  link: {\n    margin: theme.spacing(1, 4),\n  }\n}));\n\n\nexport default function Pricing() {\n  const classes = useStyles();\n\n  const [currentPage, setCurrentPage] = useState('SignIn');\n\n  const renderPage = () => {\n    switch (currentPage) {\n        case 'Confidentiality':\n          return <Confidentiality />;\n        case 'Demographics':\n            return <Demographics />\n        // case 'Symptoms':\n        //   return <Symptoms />\n        // case 'Exposure':\n        //   return <Exposure />\n        // case 'Travel':\n        //   return <Travel />\n        case 'ContactTracing':\n          return <ContactTracing />\n        default:\n          return <SignIn />;\n    }\n};\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"static\" color=\"default\" elevation={0} className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\n            Contact Tracing Self Report\n          </Typography>\n          <nav>\n            <Link variant=\"button\" color=\"textPrimary\" href=\"#\" className={classes.link} onClick={() => { setCurrentPage('Confidentiality') }}>\n              Confidentiallity\n            </Link>\n            <Link variant=\"button\" color=\"textPrimary\" href=\"#\" className={classes.link} onClick={() => { setCurrentPage('Demographics') }}>\n              Demographics\n            </Link>\n            {/* <Link variant=\"button\" color=\"textPrimary\" href=\"#\" className={classes.link} onClick={() => { setCurrentPage('Symptoms') }}>\n              Symptoms\n            </Link>\n            <Link variant=\"button\" color=\"textPrimary\" href=\"#\" className={classes.link} onClick={() => { setCurrentPage('Exposure') }}>\n              Exposure\n            </Link>\n            <Link variant=\"button\" color=\"textPrimary\" href=\"#\" className={classes.link} onClick={() => { setCurrentPage('Travel') }}>\n              Travel\n            </Link> */}\n            <Link variant=\"button\" color=\"textPrimary\" href=\"#\" className={classes.link} onClick={() => { setCurrentPage('ContactTracing') }}>\n              Contact Tracing\n            </Link>\n          </nav>\n          <Button href=\"#\" color=\"primary\" variant=\"outlined\" className={classes.link} onClick={() => { setCurrentPage('SignIn') }}>\n            Logout\n          </Button>\n        </Toolbar>\n      </AppBar>\n      {renderPage()}\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport Nav from './Nav/index';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <Nav></Nav>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}